/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.scp.coordinator.keymanagement.keystorage.tasks.common;

import static java.lang.annotation.ElementType.FIELD;
import static java.lang.annotation.ElementType.METHOD;
import static java.lang.annotation.ElementType.PARAMETER;
import static java.lang.annotation.RetentionPolicy.RUNTIME;

import com.google.inject.BindingAnnotation;
import java.lang.annotation.Retention;
import java.lang.annotation.Target;

/** Annotations for Tasks. */
public final class Annotations {

  private Annotations() {}

  /** Binds instance of Kms Key Aead used to validate encrypted private keys/splits. */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface KmsKeyAead {}

  /** Binds instance of Kms Key Encryption Key used to validate encrypted private keys/splits. */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface KmsKeyEncryptionKeyUri {}

  /** Binds instance of Coordinator Key Aead. */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface CoordinatorKeyAead {}

  /**
   * Binds the String URI of the Coordinator B cloud KMS key used for encrypting {@link
   * com.google.scp.coordinator.protos.keymanagement.shared.backend.DataKeyProto.DataKey}s delivered
   * to Coordinator A.
   *
   * <p>Format: {@code aws-kms://arn:...}
   */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface CoordinatorKekUri {}

  /**
   * Binds the String URI of the Coordinator B cloud KMS key used for encrypting key splits received
   * from Coordinator A's key generation service.
   *
   * <p>Format: {@code aws-kms://arn:...}
   *
   * <p>See {@link
   * com.google.scp.coordinator.protos.keymanagement.shared.backend.EncryptionKeyProto.EncryptionKey#getKeyEncryptionKeyUri}
   * for more information.
   */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface WorkerKekUri {}

  /**
   * Binds string reference to cloud signature key used for signing {@link
   * com.google.scp.coordinator.protos.keymanagement.shared.backend.DataKeyProto.DataKey}s. Should
   * be in the format passed to the correspond cloud APIs e.g. both "abcd-1234" and
   * "aws:arn:...:key/abc-1234" are valid formats for specifying an AWS key signature APIs.
   */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface DataKeySignatureKeyId {}

  /**
   * Binds the string representation of the signature algorithm to use when performing sign and
   * verify operations using {@link DataKeySignatureKeyId}. e.g. "ECDSA_SHA_256".
   */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface DataKeySignatureAlgorithm {}

  /** Binds the PublicKeySign generated by DataKeySignatureKeyId and DataKeySignatureAlgorithm */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface DataKeyPublicKeySign {}

  /** Binds the PublicKeyVerify generated by DataKeySignatureKeyId and DataKeySignatureAlgorithm */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface DataKeyPublicKeyVerify {}

  /**
   * Binds string reference to cloud signature key used for signing stored public key material on
   * behalf of Coordinator B. Should be in the format passed to the correspond cloud APIs e.g. both
   * "abcd-1234" and "aws:arn:...:key/abc-1234" are valid formats for specifying an AWS key
   * signature APIs.
   */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface EncryptionKeySignatureKeyId {}

  /**
   * Binds the string representation of the signature algorithm to use when performing sign and
   * verify operations using {@link SignatureKeyId}. e.g. "ECDSA_SHA_256".
   */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface EncryptionKeySignatureAlgorithm {}

  /**
   * Binds the {@code PublicKeySign} generated from {@link SignatureKeyId} and {@link
   * SignatureAlgorithm}.
   */
  @BindingAnnotation
  @Target({FIELD, PARAMETER, METHOD})
  @Retention(RUNTIME)
  public @interface EncryptionKeySignatureKey {}
}
