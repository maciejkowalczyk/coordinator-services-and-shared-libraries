/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.scp.coordinator.keymanagement.shared.dao.aws;

import static software.amazon.awssdk.enhanced.dynamodb.internal.AttributeValues.stringValue;

import com.google.scp.coordinator.protos.keymanagement.shared.backend.KeySplitDataProto.KeySplitData;
import java.util.Map;
import software.amazon.awssdk.enhanced.dynamodb.AttributeConverter;
import software.amazon.awssdk.enhanced.dynamodb.AttributeValueType;
import software.amazon.awssdk.enhanced.dynamodb.EnhancedType;
import software.amazon.awssdk.services.dynamodb.model.AttributeValue;

/** Defines DynamoDB converter for {@link KeySplitData} and AttributeValue. */
public final class KeySplitDataAttributeConverter implements AttributeConverter<KeySplitData> {

  /* *
   * KeySplitData Attributes
   *
   * Note: these are different than the keys in the json serialization generated by jackson.
   *
   */
  public static final String KEY_SPLIT_KEY_ENCRYPTION_KEY_URI = "KeySplitKeyEncryptionKeyUri";
  public static final String PUBLIC_KEY_SIGNATURE = "PublicKeySignature";

  public KeySplitDataAttributeConverter() {}

  public static KeySplitDataAttributeConverter create() {
    return new KeySplitDataAttributeConverter();
  }

  /** Transform {@link KeySplitData} to the enhanced DynamoDB map type. */
  @Override
  public AttributeValue transformFrom(KeySplitData input) {
    return AttributeValue.builder()
        .m(
            Map.of(
                KEY_SPLIT_KEY_ENCRYPTION_KEY_URI,
                stringValue(input.getKeySplitKeyEncryptionKeyUri()),
                PUBLIC_KEY_SIGNATURE,
                stringValue(input.getPublicKeySignature())))
        .build();
  }

  /** Transform DynamoDB {@link AttributeValue} map value to {@link KeySplitData}. */
  @Override
  public KeySplitData transformTo(AttributeValue attributeValue) {
    Map<String, AttributeValue> attributeValueMap = attributeValue.m();
    AttributeValue keySplitKeyEncryptionKeyUri =
        attributeValueMap.get(KEY_SPLIT_KEY_ENCRYPTION_KEY_URI);
    AttributeValue publicKeySignature = attributeValueMap.get(PUBLIC_KEY_SIGNATURE);
    KeySplitData.Builder builder = KeySplitData.newBuilder();
    if (keySplitKeyEncryptionKeyUri != null) {
      builder.setKeySplitKeyEncryptionKeyUri(keySplitKeyEncryptionKeyUri.s());
    }
    if (publicKeySignature != null) {
      builder.setPublicKeySignature(publicKeySignature.s());
    }
    return builder.build();
  }

  @Override
  public EnhancedType<KeySplitData> type() {
    return EnhancedType.of(KeySplitData.class);
  }

  @Override
  public AttributeValueType attributeValueType() {
    return AttributeValueType.M;
  }
}
